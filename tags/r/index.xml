<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Gray Analytics</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Gray Analytics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>spark_apply: Column must have a unique name</title>
      <link>/2018/06/04/spark-apply-column-must-have-a-unique-name/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/04/spark-apply-column-must-have-a-unique-name/</guid>
      <description>spark_apply():: Error: Column must have a unique name Did you get excited learning that spark_apply() will let you run your own custom functions in spark?
And then, no matter what, you&amp;rsquo;re getting this joyous error?
Column &#39;[column name]&#39; must have a unique name.  There&amp;rsquo;s a few possible causes:
 You&amp;rsquo;re using the group_by parameter, and the column name actually isn&amp;rsquo;t unique.
 The function you&amp;rsquo;re running through spark_apply() returns multiple rows/values per input.</description>
    </item>
    
    <item>
      <title>Data Synthesis Part 1</title>
      <link>/2018/02/25/data-synthesis-part-1/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/25/data-synthesis-part-1/</guid>
      <description>This post is less of a how to and more of an algorithm idea.
Inspired by random walk and monte carlo, I wanted to write an algorithm that could be used to synthetically upsample data that is a mixture of factoral and numeric data, where the columns are not independent.
My original hope was to synthesize factoral combinations.
But that doesn&amp;rsquo;t work. Without outside knowledge of what factorial column combinations are allowed, I have to work with the combinations present in the input data.</description>
    </item>
    
  </channel>
</rss>